{"version":3,"file":"static/js/8004.880954dd.chunk.js","mappings":"0MAAO,MAAMA,EAAc,eAAAC,EAAiB,OAEoC,QAFpCA,GAALC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAErCG,MAAM,6EAAqE,IAAAJ,OAAA,EAD9EA,EAEIK,KAAKC,GAAMA,EAAEC,gBACdC,KAAK,KACLC,MAAM,IAAK,EAEHC,EAAc,eAAAC,EAAiB,OAEoC,QAFpCA,GAALV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAErCG,MAAM,6EAAqE,IAAAO,OAAA,EAD9EA,EAEIN,KAAKC,GAAMA,EAAEM,OAAO,GAAGC,cAAgBP,EAAEQ,MAAM,KAChDN,KAAK,IAAK,E,eCFf,MAAMO,EAAgBC,EAAAA,GAAOC,GAAG;;;;;;;;;EAW1BC,EAAYF,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;EAkBtBE,EAAQH,EAAAA,GAAOC,GAAG;;;EAKlBG,EAAa,0LAUbC,EAAaL,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;EAetB,SAASK,IACd,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAAAC,UACNF,EAAAA,EAAAA,KAACR,EAAa,CAAAU,SACXC,OAAOC,KAAKC,EAAAA,GAAWvB,KAAI,CAACwB,EAAMC,KACjC,MAAMC,GAAYhC,EAAY8B,IAAS,IACpCrB,KAAK,KACLwB,QAAQ,UAAW,UACnBA,QAAQ,SAAU,SACfC,EAAiBL,EAAAA,EAAUC,GACjC,OACEN,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAAWC,GAAI,eAAeJ,IAAWN,UAC5CW,EAAAA,EAAAA,MAAClB,EAAS,CAAAO,SAAA,EACRF,EAAAA,EAAAA,KAACJ,EAAK,CAAAM,SAAEf,EAAYmB,MACpBN,EAAAA,EAAAA,KAACF,EAAU,CAAAI,UACTF,EAAAA,EAAAA,KAACc,EAAAA,GAAU,CACTC,MAAOL,EACPM,MAAOnB,EACPoB,OAAO,mBACPC,WAAY,CAACC,EAAAA,GAAOC,EAAAA,GAAMC,eARvBd,EAYJ,OAMnB,C","sources":["utils/utils.ts","pages/theme/home/index.tsx"],"sourcesContent":["export const toSnakeCase = (str: string = '') =>\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    ?.map((x) => x.toLowerCase())\n    .join(',')\n    .split(',');\n\nexport const toTitleCase = (str: string = '') =>\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    ?.map((x) => x.charAt(0).toUpperCase() + x.slice(1))\n    .join(' ');\n\nexport const toCamelCase = (str: string = '') => {\n  const s =\n    str\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n      ?.map((x) => x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase())\n      .join('') || '';\n  return s.slice(0, 1).toLowerCase() + s.slice(1);\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { color } from '@uiw/codemirror-extensions-color';\nimport { langs } from '@uiw/codemirror-extensions-langs';\nimport { Warpper } from '../../../components/Warpper';\nimport { themeData } from '../themes/Datas';\nimport { toSnakeCase, toTitleCase } from '../../../utils/utils';\n\nconst ThemesWarpper = styled.div`\n  grid-template-columns: repeat(3, minmax(0, 1fr));\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n  gap: 2.5rem;\n  display: grid;\n  padding: 2.6rem;\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst ThemeCard = styled.div`\n  padding: 1rem;\n  box-shadow:\n    0 0 #0000,\n    0 0 #0000,\n    0 0 #0000,\n    0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  border-radius: 0.5rem;\n  border: 1px solid var(--color-neutral-muted);\n  background-color: var(--color-canvas-subtle);\n  transition-property: all;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  transition-duration: 0.2s;\n  &:hover {\n    transform: translate(0, -0.25rem) rotate(0) skewX(0) skewY(0) scaleX(1) scaleY(1);\n  }\n`;\n\nconst Title = styled.div`\n  font-weight: 600;\n  padding-bottom: 0.68rem;\n`;\n\nconst codeString = `import React, { useState } from 'react';\n\n// My favorite component\nconst Counter = () => {\n  const [value, setValue] = useState(0);\n  return (\n    <span>{value}</span>\n  );\n};`;\n\nconst CodeEditor = styled.div`\n  border-radius: 0.375rem;\n  overflow: hidden;\n  position: relative;\n  &::before {\n    content: '';\n    display: block;\n    height: 100%;\n    background: transparent;\n    width: 100%;\n    position: absolute;\n    z-index: 1;\n  }\n`;\n\nexport function Component() {\n  return (\n    <Warpper>\n      <ThemesWarpper>\n        {Object.keys(themeData).map((name, idx) => {\n          const linkName = (toSnakeCase(name) || [])\n            .join('-')\n            .replace(/-light$/, '/light')\n            .replace(/-dark$/, '/dark');\n          const themeExtension = themeData[name as keyof typeof themeData];\n          return (\n            <Link key={idx} to={`/theme/data/${linkName}`}>\n              <ThemeCard>\n                <Title>{toTitleCase(name)}</Title>\n                <CodeEditor>\n                  <CodeMirror\n                    theme={themeExtension}\n                    value={codeString}\n                    height=\"185px !important\"\n                    extensions={[color, langs.jsx()]}\n                  />\n                </CodeEditor>\n              </ThemeCard>\n            </Link>\n          );\n        })}\n      </ThemesWarpper>\n    </Warpper>\n  );\n}\n"],"names":["toSnakeCase","_str$match","arguments","length","undefined","match","map","x","toLowerCase","join","split","toTitleCase","_str$match2","charAt","toUpperCase","slice","ThemesWarpper","styled","div","ThemeCard","Title","codeString","CodeEditor","Component","_jsx","Warpper","children","Object","keys","themeData","name","idx","linkName","replace","themeExtension","Link","to","_jsxs","CodeMirror","theme","value","height","extensions","color","langs","jsx"],"sourceRoot":""}