"use strict";(self.webpackChunkwww=self.webpackChunkwww||[]).push([[4861],{44861:(n,e,t)=>{t.r(e),t.d(e,{default:()=>o});const o={components:{},data:{},source:"\x3c!--rehype:ignore:start--\x3e\n\n# Events Extensions\n\n\x3c!--rehype:ignore:end--\x3e\n\n[![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor)\n[![npm version](https://img.shields.io/npm/v/@uiw/codemirror-extensions-events.svg)](https://www.npmjs.com/package/@uiw/codemirror-extensions-events)\n\nEvents Extensions for CodeMirror6.\n\n## Install\n\n```bash\nnpm install @uiw/codemirror-extensions-events --save\n```\n\n```js\nimport * as events from '@uiw/codemirror-extensions-events';\nimport { element } from '@uiw/codemirror-extensions-events';\n\nconst extension1 = events.scroll({\n  scroll: (evn) => {\n    /* ... */\n  },\n});\n\nconst extension1 = events.dom({\n  click: (evn) => {\n    /* ... */\n  },\n});\n\nconst extension2 = events.content({\n  focus: (evn) => {\n    /* ... */\n  },\n  blur: (evn) => {\n    /* ... */\n  },\n});\n\nconst extension3 = element({\n  type: 'content',\n  props: {\n    inputMode: 'none',\n  },\n});\n```\n\n## Usage\n\n```jsx\nimport CodeMirror from '@uiw/react-codemirror';\nimport * as events from '@uiw/codemirror-extensions-events';\nimport { element } from '@uiw/codemirror-extensions-events';\n\nfunction App() {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  const eventExt = events.scroll({\n    scroll: (evn) => {\n      setScrollTop(evn.target.scrollTop);\n    },\n  });\n\n  const eventExt2 = events.content({\n    focus: (evn) => {\n      console.log('focus');\n    },\n    blur: (evn) => {\n      console.log('blur');\n    },\n  });\n\n  return (\n    <CodeMirror\n      value=\"console.log('hello world!');\"\n      height=\"200px\"\n      extensions={[\n        element({\n          type: 'content',\n          props: {\n            inputMode: 'none',\n          },\n        }),\n        eventExt,\n        eventExt2,\n      ]}\n    />\n  );\n}\nexport default App;\n```\n\n```js\nimport { EditorView } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\nimport * as events from '@uiw/codemirror-extensions-events';\n\nconst eventExt = events.content({\n  focus: (evn) => {\n    console.log('focus');\n  },\n  blur: (evn) => {\n    console.log('blur');\n  },\n});\n\nconst state = EditorState.create({\n  doc: 'my source code',\n  extensions: [eventExt],\n});\n\nconst view = new EditorView({\n  parent: document.querySelector('#editor'),\n  state,\n});\n```\n\n## API\n\n```ts\nimport { ViewPlugin, EditorView } from '@codemirror/view';\nexport declare type Events<K extends keyof HTMLElementEventMap> = Record<\n  K,\n  (this: HTMLElement, event: HTMLElementEventMap[K]) => void\n>;\n/**\n * The DOM element that can be styled to scroll.\n * (Note that it may not have been, so you can't assume this is scrollable.)\n */\nexport declare function dom<T extends keyof HTMLElementEventMap>(\n  opts: Events<T>,\n): ViewPlugin<{\n  dom?: HTMLElement | undefined;\n  view: EditorView;\n  destroy(): void;\n}>;\n/**\n * The DOM element that wraps the entire editor view.\n */\nexport declare function scroll<T extends keyof HTMLElementEventMap>(\n  opts: Events<T>,\n): ViewPlugin<{\n  dom?: HTMLElement | undefined;\n  view: EditorView;\n  destroy(): void;\n}>;\n/**\n * The editable DOM element holding the editor content.\n * You should not, usually, interact with this content directly though the DOM,\n * since the editor will immediately undo most of the changes you make.\n */\nexport declare function content<T extends keyof HTMLElementEventMap>(\n  opts: Events<T>,\n): ViewPlugin<{\n  dom?: HTMLElement | undefined;\n  view: EditorView;\n  destroy(): void;\n}>;\n```\n\n## Contributors\n\nAs always, thanks to our amazing contributors!\n\n<a href=\"https://github.com/uiwjs/react-codemirror/graphs/contributors\">\n  <img src=\"https://uiwjs.github.io/react-codemirror/CONTRIBUTORS.svg\" />\n</a>\n\nMade with [github-action-contributors](https://github.com/jaywcjlove/github-action-contributors).\n\n## License\n\nLicensed under the MIT License.\n",headings:[],headingsList:[]}}}]);
//# sourceMappingURL=4861.8c907614.chunk.js.map