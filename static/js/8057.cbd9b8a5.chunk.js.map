{"version":3,"file":"static/js/8057.cbd9b8a5.chunk.js","mappings":"4HAEO,MAAMA,EAAcC,EAAAA,GAAOC,GAAG;;;;EAMdD,EAAAA,GAAOC,GAAG;;;mGCQ1B,IAAIC,EAAsB,EAdxBC,E,SAAAA,IAAY,CACjBC,aAAcA,CAACC,EAAQC,KACrB,GAAID,EAASC,EAAMC,IAAIC,MACrB,MAAO,IAET,IAAIC,EAAaH,EAAMC,IAAIG,OAAOJ,EAAMK,UAAUC,WAAWC,OAAO,GAAGC,IAAIC,OAC3E,OAAIV,IAAWI,EACN,IAEAO,KAAKC,IAAIR,EAAaJ,GAAQa,UACvC,K,kECJC,MAAMC,EAAoDA,KAC/D,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,KACZC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,IAC1B,OACEC,EAAAA,EAAAA,KAAC1B,EAAAA,GAAW,CAAA2B,UACVD,EAAAA,EAAAA,KAACE,EAAAA,GAAU,CACTC,MAAON,EAAOO,MACdT,MAAOA,EACPU,OAAO,mBACPC,MAAO,CAAEC,OAAQ,cACjBC,WAAY,CAACC,EAAAA,GAAMC,WAAYjC,MAErB,EAILkC,EAAYA,KAErBX,EAAAA,EAAAA,KAACY,EAAAA,GAAO,CAACC,KAAMA,IAAM,gCAAqEZ,UACxFD,EAAAA,EAAAA,KAACN,EAA0B,K,kDCxB1B,SAASE,IAAyD,IAAhDkB,EAAmCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,QAC7D,MAAMG,EAAOC,SAASC,gBAAgBC,aAAa,oBAC5C1B,EAAO2B,IAAYC,EAAAA,EAAAA,UAAiD,SAATL,EAAkB,OAASJ,GAO7F,OANAU,EAAAA,EAAAA,YAAU,KACRF,EAAsE,SAA7DH,SAASC,gBAAgBC,aAAa,mBAAgC,OAAS,SACxFF,SAASM,iBAAiB,qBAAsBC,IAC9CJ,EAASI,EAAEC,OAAOC,YAA6C,GAC/D,GACD,IACI,CAAEjC,QAAO2B,WAClB,C","sources":["pages/extensions/index.tsx","../../extensions/line-numbers-relative/esm/index.js","pages/extensions/line-numbers-relative/index.tsx","utils/useTheme.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageWarpper = styled.div`\n  flex: 1;\n  max-width: 980px;\n  padding: 20px 20px 30px 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport const Extensions = () => {};\n","import { lineNumbers } from '@codemirror/view';\nfunction formatNumber() {\n  return lineNumbers({\n    formatNumber: (lineNo, state) => {\n      if (lineNo > state.doc.lines) {\n        return '0';\n      }\n      var cursorLine = state.doc.lineAt(state.selection.asSingle().ranges[0].to).number;\n      if (lineNo === cursorLine) {\n        return '0';\n      } else {\n        return Math.abs(cursorLine - lineNo).toString();\n      }\n    }\n  });\n}\nexport var lineNumbersRelative = [formatNumber()];","import { useContext, type FC, type PropsWithChildren } from 'react';\nimport { lineNumbersRelative } from '@uiw/codemirror-extensions-line-numbers-relative';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { langs } from '@uiw/codemirror-extensions-langs';\nimport { Preview, MdContext } from '../../theme/Preview';\nimport { useTheme } from '../../../utils/useTheme';\nimport { PageWarpper } from '..';\n\nexport const LineNumbersRelativeExample: FC<PropsWithChildren> = () => {\n  const { theme } = useTheme();\n  const mdData = useContext(MdContext);\n  return (\n    <PageWarpper>\n      <CodeMirror\n        value={mdData.mdstr}\n        theme={theme}\n        height=\"300px !important\"\n        style={{ margin: '0 0 23px 0' }}\n        extensions={[langs.markdown(), lineNumbersRelative]}\n      />\n    </PageWarpper>\n  );\n};\n\nexport const Component = () => {\n  return (\n    <Preview path={() => import('@uiw/codemirror-extensions-line-numbers-relative/README.md')}>\n      <LineNumbersRelativeExample />\n    </Preview>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { ReactCodeMirrorProps } from '@uiw/react-codemirror';\n\nexport function useTheme(name: ReactCodeMirrorProps['theme'] = 'light') {\n  const dark = document.documentElement.getAttribute('data-color-mode');\n  const [theme, setTheme] = useState<ReactCodeMirrorProps['theme']>(dark === 'dark' ? 'dark' : name);\n  useEffect(() => {\n    setTheme(document.documentElement.getAttribute('data-color-mode') === 'dark' ? 'dark' : 'light');\n    document.addEventListener('colorschemechange', (e) => {\n      setTheme(e.detail.colorScheme as ReactCodeMirrorProps['theme']);\n    });\n  }, []);\n  return { theme, setTheme };\n}\n"],"names":["PageWarpper","styled","div","lineNumbersRelative","lineNumbers","formatNumber","lineNo","state","doc","lines","cursorLine","lineAt","selection","asSingle","ranges","to","number","Math","abs","toString","LineNumbersRelativeExample","theme","useTheme","mdData","useContext","MdContext","_jsx","children","CodeMirror","value","mdstr","height","style","margin","extensions","langs","markdown","Component","Preview","path","name","arguments","length","undefined","dark","document","documentElement","getAttribute","setTheme","useState","useEffect","addEventListener","e","detail","colorScheme"],"sourceRoot":""}